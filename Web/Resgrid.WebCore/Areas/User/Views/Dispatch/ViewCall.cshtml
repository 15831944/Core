@using System.Drawing
@using System.Globalization
@using Resgrid.Model.Helpers
@using Resgrid.Web.Helpers
@model Resgrid.Web.Areas.User.Models.Calls.ViewCallView
@{
  ViewBag.Title = "Resgrid | View Call";
  Layout = "~/Areas/User/Views/Shared/_UserLayout.cshtml";
}
@section Styles
  {
  <link rel="stylesheet" href="~/lib/jplayer/dist/skin/blue.monday/css/jplayer.blue.monday.min.css" />
	<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/jquery.slick/1.6.0/slick.css" />
	<link rel="stylesheet" href="https://cdn.plyr.io/3.3.22/plyr.css">
}

@Html.HiddenFor(m => m.Latitude)
@Html.HiddenFor(m => m.Longitude)

<div class="row wrapper border-bottom white-bg page-heading">
  <div class="col-sm-4">
    <h2>View Call</h2>
    <ol class="breadcrumb">
      <li>
        <a asp-controller="Home" asp-action="Dashboard" asp-route-area="User">Home</a>
      </li>
      <li>
        <a asp-controller="Dispatch" asp-action="Dashboard" asp-route-area="User">Calls</a>
      </li>
      <li class="active">
        <strong>View Call</strong>
      </li>
    </ol>
  </div>
  <div class="col-sm-8">
    <div class="btn-group top-page-buttons" style="float:right;padding-right:15px;">
      <div class="buttons-actions">
        @if (ClaimsAuthorizationHelper.CanCreateCall() && Model.Call.State != 0)
		{
          <button class="btn btn-danger" onclick="resgrid.dispatch.viewcall.reOpenCall();">Re-Open Call</button>
		}
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-lg-12">
    <div class="wrapper wrapper-content animated fadeInUp">
      <div class="ibox">
        <div class="ibox-content">
          <div class="row">
            <div class="col-lg-12">
              <div class="m-b-md">
                <a asp-controller="Dispatch" asp-action="CallExport" asp-route-area="User" asp-route-callId="@Model.Call.CallId" class="btn btn-info btn-xs pull-right">Print (Export) View</a>
                <h2>@Model.Call.Name</h2>
              </div>
              <dl class="dl-horizontal" style="margin-bottom: 0px;">
                <dt>Status:</dt>
                <dd>
                  @if (Model.Call.State == (int)CallStates.Active)
				  {
                    <span style="display: block; color: green;">Active</span>
				  }
				  else if (Model.Call.State == (int)CallStates.Cancelled)
				  {
                    <span style="display: block; color: gray;">Canceled</span>
				  }
				  else if (Model.Call.State == (int)CallStates.Closed)
				  {
                    <span style="display: block; color: black;">Closed</span>
				  }
				  else if (Model.Call.State == (int)CallStates.Unfounded)
				  {
                    <span style="display: block; color: blue;">Unfounded</span>
				  }
                </dd>
              </dl>
            </div>
          </div>
          <div class="row">
            <div class="col-lg-5">
              <dl class="dl-horizontal">
                <dt>Number:</dt>
                <dd>@Model.Call.Number</dd>
                <dt>Type:</dt>
                <dd>
                  @if (!String.IsNullOrWhiteSpace(Model.Call.Type))
				  {
                    <span style="display: block;">@Model.Call.Type</span>
				  }
				  else
				  {
                    <span style="display: block;">No Type</span>
				  }
                </dd>
                <dt>Priority:</dt>
                <dd><span style="display: block;">@(((CallPriority)Model.Call.Priority).ToString())</span></dd>
                <dt>Call Address:</dt>
                <dd>@Model.Call.Address</dd>
              </dl>
            </div>
            <div class="col-lg-7" id="cluster_info">
              <dl class="dl-horizontal">
                <dt>Logged By:</dt>
                <dd>@UserHelper.GetFullNameForUser(Model.Call.ReportingUserId)</dd>
                <dt>Logged On:</dt>
                <dd>@Model.Call.LoggedOn.TimeConverterToString(Model.Department)</dd>
                @if (Model.Call.ClosedOn.HasValue)
				{
                  <dt>Closed By:</dt>
                  <dd>@UserHelper.GetFullNameForUser(Model.Call.ClosedByUserId)</dd>
                  <dt>Closed On:</dt>
                  <dd>@Model.Call.ClosedOn.Value.TimeConverterToString(Model.Department)</dd>
				}
				else
				{
                  <dt>Closed By:</dt>
                  <dd>N/A</dd>
                  <dt>Closed On:</dt>
                  <dd>N/A</dd>
				}
              </dl>
            </div>
          </div>
          <div class="row">
            <div class="col-lg-12">
              <dl class="dl-horizontal">
                <dt>Nature of Call:</dt>
                <dd>
                  @Html.Raw(Model.Call.NatureOfCall)
                </dd>
              </dl>
            </div>
          </div>
          <div class="row">
            <div class="col-lg-12">
              <dl class="dl-horizontal">
                <dt>Notes:</dt>
                <dd>
                  @Html.Raw(Model.Call.Notes)
                </dd>
              </dl>
            </div>
          </div>
          <div class="row">
            <div class="col-lg-12">
              <dl class="dl-horizontal">
                <dt>Close Notes:</dt>
                <dd>
                  @Html.Raw(Model.Call.CompletedNotes)
                </dd>
              </dl>
            </div>
          </div>
          <div class="row m-t-sm">
            <div class="col-lg-12">
              <div class="panel blank-panel">
                <div class="panel-heading">
                  <div class="panel-options">
                    <ul class="nav nav-tabs">
                      <li class="active"><a href="#tab-1" data-toggle="tab" aria-expanded="false">Map</a></li>
                      <li class=""><a href="#tab-2" data-toggle="tab" aria-expanded="true">Dispatched</a></li>
                      <li class=""><a href="#tab-3" data-toggle="tab" aria-expanded="false">Personnel Activity</a></li>
                      <li class=""><a href="#tab-4" data-toggle="tab" aria-expanded="false">Unit Activity</a></li>
                      <li class=""><a href="#tab-5" data-toggle="tab" aria-expanded="false">Images</a></li>
                      <li class=""><a href="#tab-7" data-toggle="tab" aria-expanded="false">Files</a></li>
                      <li class=""><a href="#tab-6" data-toggle="tab" aria-expanded="false">Notes</a></li>
                    </ul>
                  </div>
                </div>
                <div class="panel-body">
                  <div class="tab-content">
                    <div class="tab-pane active" id="tab-1">
                      <div id="callMap" name="callMap" style="position: relative; width: 500px; height: 500px;"></div>
                    </div>
                    <div class="tab-pane" id="tab-2">
                      <table class="table table-bordered table-striped">
                        <thead>
                          <tr>
                            <th>

                            </th>
                            <th>

                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          @foreach (var g in Model.Groups)
						  {
							var sortedUsers = from u in g.Members
											  let name = UserHelper.GetFullNameForUser(u.UserId)
											  orderby name ascending
											  select new
											  {
												Name = name,
												User = u
											  };
                            <tr>
                              <td colspan="2"><b>@g.Name</b></td>
                            </tr>
							foreach (var u in sortedUsers)
							{
							  if (Model.Call.HasUserBeenDispatched(u.User.UserId))
							  {
                                <tr>
                                  <td></td>
                                  <td>@u.Name</td>
                                </tr>
							  }
							}
						  }

                          @{


							var sortedUngroupedUsers = from u in Model.UnGroupedUsers
													   let name = UserHelper.GetFullNameForUser(u.UserId)
													   orderby name ascending
													   select new
													   {
														 Name = name,
														 User = u
													   };
                          }

                          <tr>
                            <td colspan="2"><b>Ungrouped Users</b></td>
                          </tr>
                          @foreach (var u in sortedUngroupedUsers)
						  {
							if (Model.Call.HasUserBeenDispatched(u.User.UserId))
							{
                              <tr>
                                <td></td>
                                <td>@u.Name</td>
                              </tr>
							}
						  }
                        </tbody>
                      </table>
                    </div>
                    <div class="tab-pane" id="tab-3">
                      <table class="table table-striped">
                        <thead>
                          <tr>
                            <th>Timestamp</th>
                            <th>Status</th>
                            <th>Name</th>
                            <th>Group</th>
                            <th>Note</th>
                          </tr>
                        </thead>
                        <tbody>
                          @foreach (var al in Model.ActionLogs)
						  {
							var customState = CustomStatesHelper.GetCustomPersonnelStatus(Model.Department.DepartmentId, al);
							var userInfo = Model.UserGroupRoles.FirstOrDefault(x => x.UserId == al.UserId);

                            <tr>
                              <td>
                                @al.Timestamp.TimeConverterToString(Model.Department)
                              </td>
                              <td>
                                @if (al.ActionTypeId <= 25)
								{
                                  <span class='label @customState.ButtonColor'>@customState.ButtonText</span>
								}
								else
								{
                                  <span class='label label-default' style="color: @customState.TextColor; background-color: @customState.ButtonColor;">@customState.ButtonText</span>
								}
                              </td>
                              <td>
                                @if (userInfo != null)
								{
                                  <span>@userInfo.Name</span>
								}
								else
								{
                                  <span>@UserHelper.GetFullNameForUser(al.UserId)</span>
								}
                              </td>
                              <td>
                                @if (userInfo != null)
								{
                                  <span>@userInfo.DepartmentGroupName</span>
								}
								else
								{
                                  <span></span>
								}
                              </td>
                              <td>
                                <p class="small">
                                  @Html.Raw(al.Note)
                                </p>
                              </td>
                            </tr>
						  }
                        </tbody>
                      </table>
                    </div>
                    <div class="tab-pane" id="tab-4">
                      <table class="table table-striped">
                        <thead>
                          <tr>
                            <th>Timestamp</th>
                            <th>Status</th>
                            <th>Name</th>
                            <th>Group</th>
                            <th>Note</th>
                          </tr>
                        </thead>
                        <tbody>
                          @foreach (var us in Model.UnitStates)
						  {
							var customState = CustomStatesHelper.GetCustomUnitState(us);

                            <tr>
                              <td>@us.Timestamp.TimeConverterToString(Model.Department)</td>
                              <td>
                                @if (us.State <= 25)
								{
                                  <span class='label @customState.ButtonColor'>@customState.ButtonText</span>
								}
								else
								{
                                  <span class='label label-default' style="color: @customState.TextColor; background-color: @customState.ButtonColor;">@customState.ButtonText</span>
								}
                              </td>
                              <td>@us.Unit.Name</td>
                              <td>
                                @if (us.Unit.StationGroup != null)
								{
                                  @us.Unit.StationGroup.Name
								}
                              </td>
                              <td>
                                <p class="small">
                                  @Html.Raw(us.Note)
                                </p>
                              </td>
                            </tr>
						  }
                        </tbody>
                      </table>
                    </div>
                    <div class="tab-pane" id="tab-7">
                      <table class="table table-striped">
                        <thead>
                          <tr>
                            <th>Type</th>
                            <th>File Name</th>
                            <th>File Type</th>
                            <th>Timestamp</th>
                            <th>View</th>
                          </tr>
                        </thead>
                        <tbody>
                          @foreach (var file in Model.Call.Attachments.Where(x => x.CallAttachmentType == 1 || x.CallAttachmentType == 3 || x.CallAttachmentType == 4))
						  {
                            <tr>
                              <td>
                                @if (file.CallAttachmentType == 1)
								{
                                  <span>Dispatch Audio</span>
								}
								else if (file.CallAttachmentType == 3)
								{
                                  <span>File</span>
								}
								else if (file.CallAttachmentType == 4)
								{
                                  <span>Video</span>
								}
                              </td>
                              <td>
                                <span>@file.FileName</span>
                              </td>
                              <td></td>
                              <td>
                                @if (file.Timestamp.HasValue)
								{
                                  <span>@file.Timestamp.Value.TimeConverterToString(Model.Department)</span>
								}
                              </td>
                              <td>
                                <audio id="player" controls>
                                  <source src="@Url.Action("GetCallDispatchAudio", "Dispatch", new { Area = "User", callId = Model.Call.CallId })" type="audio/mp3">
                                </audio>
                              </td>
                            </tr>
						  }
                        </tbody>
                      </table>
                    </div>
                    <div class="tab-pane" id="tab-5">
                      <div class="callImages">
                        @foreach (var image in Model.Call.Attachments.Where(x => x.CallAttachmentType == 2))
						{
                          <div>
                            <div class="ibox-content">
                              <div>
                                <dl class="dl-horizontal">
                                  <dt>Name:</dt>
                                  <dd>@image.Name</dd>
                                  <dt>Timestamp:</dt>
                                  @if (image.Timestamp.HasValue)
								  {
                                    <dd>@image.Timestamp.Value.TimeConverterToString(Model.Department)</dd>
								  }
								  else
								  {
                                    <dd>Unknown</dd>
								  }
                                  <dt>Location:</dt>
                                  <dd>Unknown</dd>
                                </dl>

                              </div>
                              <div>
                                <img src="@Url.Action("GetCallImage", "Dispatch", new {Area = "User", callId = image.CallId, attachmentId = image.CallAttachmentId})" />
                              </div>
                            </div>
                          </div>
						}
                      </div>
                    </div>
                    <div class="tab-pane" id="tab-6">
                      <div class="chat-content">
                        <div id="note-messages-inner" class="feed-activity-list chat-messages">

                        </div>

                        <div class="chat-message well">
                          <span class="input-box input-group">
                            <input placeholder="Enter note here..." type="text" class="form-control input-small" name="note-box" id="note-box" />
                            <span class="input-group-btn">
                              <button class="btn btn-success btn-small" type="button" onclick="resgrid.dispatch.viewcall.addCallNote()" id="note-box-submit">Add Note</button>
                            </span>
                          </span>
                        </div>
                      </div>
                    </div>

                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts
  {
  <script src="https://cdn.plyr.io/3.3.22/plyr.js"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery.slick/1.6.0/slick.min.js"></script>
  <script src="~/lib/jplayer/dist/jplayer/jquery.jplayer.min.js"></script>
  <script type="text/javascript">

	var callId = @(Model.Call.CallId);

		//<![CDATA[
	$(document).ready(function () {
	  $("#note-box").keyup(function (event) {
		if (event.keyCode === 13) {
		  $("#note-box-submit").click();
		}
	  });

		var player = new Plyr('#player');

			$("#jquery_jplayer_1").jPlayer({
				ready: function (event) {
					$(this).jPlayer("setMedia", {
						mp3: "@Url.Action("GetCallDispatchAudio", "Dispatch", new { Area = "User", callId = Model.Call.CallId })"
					});
				},
				swfPath: "js",
				supplied: "mp3",
				wmode: "window"
			});
		});
		//]]>
  </script>

  <script src="~/js/app/common/signalr/resgrid.common.signalr.js" type="text/javascript"></script>
  <script src="~/js/app/internal/dispatch/resgrid.dispatch.viewcall.js"></script>
}
